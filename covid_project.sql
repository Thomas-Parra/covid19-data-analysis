-- COVID-19 DATA ANALYSIS



-- Looking at total cases vs deaths

SELECT LOCATION, DATE, TOTAL_CASES, TOTAL_DEATHS, ROUND((TOTAL_DEATHS/TOTAL_CASES)*100,2) AS DEATH_RATIO
FROM DEATHS
WHERE LOCATION ='Colombia'
ORDER BY 1,2

-- Looking at total cases vs population

SELECT LOCATION, DATE, TOTAL_CASES, POPULATION, ROUND((TOTAL_CASES/POPULATION)*100,2) AS INFECTED_RATIO
FROM DEATHS
WHERE LOCATION ='Colombia'
ORDER BY 1,2


-- Countries with highest infection rates

SELECT LOCATION, MAX(TOTAL_CASES) AS HIGHEST_INFECTION_COUNT, POPULATION, MAX((TOTAL_CASES/POPULATION)*100) AS INFECTED_RATIO
FROM DEATHS
GROUP BY 1,3
HAVING MAX((TOTAL_CASES/POPULATION)*100) IS NOT NULL
ORDER BY 4 DESC;


-- Countries with highest death counts

SELECT LOCATION, MAX(TOTAL_DEATHS) AS DEATHS_COUNT
FROM DEATHS
WHERE CONTINENT IS NOT NULL
GROUP BY 1
HAVING MAX(TOTAL_DEATHS) IS NOT NULL
ORDER BY 2 DESC;


-- BREAKING THINGS DOWN BY CONTINENT

-- Showing contintents with the highest death count per population

Select continent, MAX(cast(Total_deaths as int)) as TotalDeathCount
From PortfolioProject..CovidDeaths
--Where location like '%states%'
Where continent is not null 
Group by continent
order by TotalDeathCount desc



-- GLOBAL NUMBERS

Select SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int))/SUM(New_Cases)*100 as DeathPercentage
From PortfolioProject..CovidDeaths
--Where location like '%states%'
where continent is not null 
--Group By date
order by 1,2


-- NEW DEATHS / NEW CASES BY CONTINENT

SELECT DATE, SUM(NEW_CASES) AS TOTAL_NEW_CASES, SUM(NEW_DEATHS) AS TOTAL_NEW_DEATHS, ROUND(SUM(NEW_DEATHS)/NULLIF(SUM(NEW_CASES),0),2)*100 AS DEATH_RATIO
FROM DEATHS
WHERE CONTINENT IS NOT NULL 
GROUP BY DATE
ORDER BY 1,2



-- JOIN VACCINATION TABLE 

SELECT D.CONTINENT, D.LOCATION, D.DATE, D.POPULATION, V.NEW_VACCINATIONS
FROM DEATHS AS D
JOIN VACCINATION AS V
	ON V.LOCATION = D.LOCATION 
	AND V.DATE = D.DATE
ORDER BY 1,2,3


-- USING WINDOW FUNCTION TO CALCULATE ROLLING VACCINATION COUNT

SELECT D.CONTINENT, D.LOCATION, D.DATE, D.POPULATION, V.NEW_VACCINATIONS,
SUM(V.NEW_VACCINATIONS) OVER (PARTITION BY D.LOCATION ORDER BY D.LOCATION, D.DATE) as TOTAL_VACCINATIONS_CALC
FROM DEATHS AS D
JOIN VACCINATION AS V
	ON V.LOCATION = D.LOCATION 
	AND V.DATE = D.date
WHERE D.CONTINENT IS NOT NULL
ORDER BY 2,3


-- USING CTE

WITH POPVSVAC (CONTINENT, LOCATION, DATE, POPULATION, NEW_VACCINATIONS, TOTAL_VACCINATIONS_CALC)
AS (
SELECT D.CONTINENT, D.LOCATION, D.DATE, D.POPULATION, V.NEW_VACCINATIONS,
SUM(V.NEW_VACCINATIONS) OVER (PARTITION BY D.LOCATION ORDER BY D.LOCATION, D.DATE) as TOTAL_VACCINATIONS_CALC
FROM DEATHS AS D
JOIN VACCINATION AS V
	ON V.LOCATION = D.LOCATION 
	AND V.DATE = D.date
WHERE D.CONTINENT IS NOT NULL AND D.LOCATION = 'Colombia'
ORDER BY 2,3
)
SELECT *, (TOTAL_VACCINATIONS_CALC/POPULATION)*100
FROM POPVSVAC


-- CREATING TEMPORARY TABLE 

DROP TABLE IF EXISTS POP_VACC;

CREATE TEMP TABLE POP_VACC(
	CONTINENT VARCHAR(255),
	LOCATION VARCHAR(255),
	DATE DATE,
	POPULATION NUMERIC,
	NEW_VACCINATIONS NUMERIC,
	TOTAL_VACCINATIONS_CALC NUMERIC
);

INSERT INTO POP_VACC
SELECT D.CONTINENT, D.LOCATION, D.DATE, D.POPULATION, V.NEW_VACCINATIONS,
SUM(V.NEW_VACCINATIONS) OVER (PARTITION BY D.LOCATION ORDER BY D.LOCATION, D.DATE) as TOTAL_VACCINATIONS_CALC
FROM DEATHS AS D
JOIN VACCINATION AS V
	ON V.LOCATION = D.LOCATION 
	AND V.DATE = D.date
WHERE D.CONTINENT IS NOT NULL;


SELECT *, (TOTAL_VACCINATIONS_CALC/POPULATION)*100
FROM POP_VACC


-- CREATE VIEW 

CREATE VIEW POP_VACCINATED_VIEW AS
SELECT D.CONTINENT, D.LOCATION, D.DATE, D.POPULATION, V.NEW_VACCINATIONS,
SUM(V.NEW_VACCINATIONS) OVER (PARTITION BY D.LOCATION ORDER BY D.LOCATION, D.DATE) as TOTAL_VACCINATIONS_CALC
FROM DEATHS AS D
JOIN VACCINATION AS V
	ON V.LOCATION = D.LOCATION 
	AND V.DATE = D.date;


SELECT * 
FROM POP_VACCINATED_VIEW